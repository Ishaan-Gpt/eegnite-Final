// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ContactSubmission {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String
  company     String?
  website     String?
  phone       String?
  service     String
  budget      String
  message     String
  newsletter  Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String?  // Link to user if authenticated
  user        User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  @@index([email])
  @@index([createdAt])
}

model NewsletterSignup {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isActive  Boolean  @default(true)
  userId    String?  // Link to user if authenticated
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  @@index([email])
  @@index([createdAt])
}

model User {
  id                String              @id @default(cuid())
  email             String              @unique
  firstName         String?
  lastName          String?
  role              UserRole            @default(USER)
  emailVerified     Boolean             @default(false)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  lastLoginAt       DateTime?
  
  // Relations
  contactSubmissions ContactSubmission[]
  newsletterSignups  NewsletterSignup[]
  userProfile        UserProfile?
  analyticsEvents    AnalyticsEvent[]
  
  @@index([email])
  @@index([createdAt])
}

model UserProfile {
  id                String   @id @default(cuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Profile information
  company           String?
  jobTitle          String?
  industry          String?
  companySize       CompanySize?
  phone             String?
  website           String?
  
  // Preferences
  marketingEmails   Boolean  @default(true)
  newsletterEmails  Boolean  @default(true)
  notifications     Boolean  @default(true)
  
  // Analytics preferences
  allowAnalytics    Boolean  @default(true)
  allowCookies      Boolean  @default(true)
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@index([userId])
}

model AnalyticsEvent {
  id          String           @id @default(cuid())
  userId      String?
  user        User?            @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  // Event details
  eventType   AnalyticsEventType
  eventName   String
  pageUrl     String?
  referrer    String?
  userAgent   String?
  ipAddress   String?
  
  // Session information
  sessionId   String?
  deviceType  DeviceType?
  browser     String?
  os          String?
  
  // Custom properties
  properties  Json?
  
  createdAt   DateTime         @default(now())
  
  @@index([userId])
  @@index([eventType])
  @@index([createdAt])
  @@index([sessionId])
}

model AdminDashboard {
  id          String   @id @default(cuid())
  name        String
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SiteContent {
  id        Int      @id @default(autoincrement())
  key       String   @unique // e.g., 'homepage', 'about', 'services'
  content   Json
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

enum UserRole {
  USER
  ADMIN
  MODERATOR
}

enum CompanySize {
  SOLO
  SMALL_2_10
  MEDIUM_11_50
  LARGE_51_200
  ENTERPRISE_200_PLUS
}

enum AnalyticsEventType {
  PAGE_VIEW
  BUTTON_CLICK
  FORM_SUBMIT
  DOWNLOAD
  EMAIL_SIGNUP
  CONTACT_SUBMIT
  CALCULATOR_USE
  TOOL_USE
  ERROR
  PERFORMANCE
}

enum DeviceType {
  DESKTOP
  MOBILE
  TABLET
  OTHER
}
